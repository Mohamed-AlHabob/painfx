services:
  django:
    build:
      context: ./backend
    container_name: painfx_backend
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: "${POSTGRES_PORT}"
      AUTH_COOKIE_SECURE: "${AUTH_COOKIE_SECURE}"
      GOOGLE_AUTH_KEY: ${GOOGLE_AUTH_KEY}
      GOOGLE_AUTH_SECRET_KEY: ${GOOGLE_AUTH_SECRET_KEY}
      REDIRECT_URLS: ${REDIRECT_URLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      TRAEFIK_EMAIL: ${TRAEFIK_EMAIL}
      DOMAIN: "${DOMAIN}"
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_FROM_NUMBER: "${TWILIO_FROM_NUMBER}"
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: "${DJANGO_DEBUG}"
      DEVELOPMENTMODE: "${DEVELOPMENTMODE}"
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis
    networks:
      - mynetwork
    volumes:
      - staticfiles:/app/staticfiles

  nextjs:
    build:
      context: ../painfx_frontend
      dockerfile: Dockerfile
    container_name: painfx_frontend
    environment:
      NEXT_PUBLIC_BACKEND_API_URL: "https://api.${DOMAIN}"
      NEXT_PUBLIC_REDIRECT_URL: "https://${DOMAIN}/google"
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_51OF23EH6eN12iihYcTAgC2sE9gjRtqz4UXN6xkOQp9DhrhVzRbscDFUv4hSdeFoTaaaoHz5J66svxG9GzwYu1hNH002x3aWMIk"
    networks:
      - mynetwork

  celery:
    build:
      context: ./backend
      dockerfile: ../infrastructure/celery/celery-worker/Dockerfile
    container_name: painfx_celery
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: "${POSTGRES_PORT}"
      AUTH_COOKIE_SECURE: "${AUTH_COOKIE_SECURE}"
      GOOGLE_AUTH_KEY: ${GOOGLE_AUTH_KEY}
      GOOGLE_AUTH_SECRET_KEY: ${GOOGLE_AUTH_SECRET_KEY}
      REDIRECT_URLS: ${REDIRECT_URLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      TRAEFIK_EMAIL: ${TRAEFIK_EMAIL}
      DOMAIN: "${DOMAIN}"
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_FROM_NUMBER: "${TWILIO_FROM_NUMBER}"
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: "${DJANGO_DEBUG}"
      DEVELOPMENTMODE: "${DEVELOPMENTMODE}"
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mynetwork
    volumes:
      - ./backend:/app:z
    command: ["celery", "-A", "core", "worker", "--loglevel=info"]

  celery-flower:
    build:
      context: ./backend
      dockerfile: ../infrastructure/celery/celery-flower/Dockerfile
    container_name: painfx_celery_flower
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: "${POSTGRES_PORT}"
      AUTH_COOKIE_SECURE: "${AUTH_COOKIE_SECURE}"
      GOOGLE_AUTH_KEY: ${GOOGLE_AUTH_KEY}
      GOOGLE_AUTH_SECRET_KEY: ${GOOGLE_AUTH_SECRET_KEY}
      REDIRECT_URLS: ${REDIRECT_URLS}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      TRAEFIK_EMAIL: ${TRAEFIK_EMAIL}
      DOMAIN: "${DOMAIN}"
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_FROM_NUMBER: "${TWILIO_FROM_NUMBER}"
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: "${DJANGO_DEBUG}"
      DEVELOPMENTMODE: "${DEVELOPMENTMODE}"
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    ports:
      - "5555:5555"
    depends_on:
      celery:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - mynetwork
    volumes:
      - ./backend:/app:z
    command: [
      "celery", "-A", "core", "flower",
      "--port=5555",
      "--loglevel=info",
      "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"
    ]

  redis:
    image: redis:latest
    container_name: painfx_redis
    networks:
      - mynetwork
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:latest
    container_name: painfx_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data:z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  staticfiles:
